version: '2.1'
services:
  resource-service:
    image: gbakradze/resource-service:0.0.1-SNAPSHOT
#    image: 'docker.io/microservice/microservices-architecture-overview-resource-service:latest'
    container_name: resource-service
    depends_on:
      postgresqldb-resourceservice:
        condition: service_started
    ports:
      - "8082:8082"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "resourceservice"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/resourceservice
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=root
#      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop

  postgresqldb-resourceservice:
    image: 'postgres:13.1-alpine'
    container_name: postgresqldb-resourceservice
    ports:
      - "5431:5432"
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: root
        POSTGRES_DB: resourceservice
  song-service:
    image: gbakradze/song-service:0.0.1-SNAPSHOT
#    image: 'docker.io/microservice/microservices-architecture-overview-song-service:latest'
    depends_on:
      postgresqldb-songservice:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      DATABASESERVER_PORT: "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb_songservice:5432/songservice
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=root
#      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop

  postgresqldb-songservice:
    image: 'postgres:13.1-alpine'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "songservice"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5